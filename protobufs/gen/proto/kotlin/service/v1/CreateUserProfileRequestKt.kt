//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: service/v1/user_profile_service.proto

package service.v1;

@kotlin.jvm.JvmName("-initializecreateUserProfileRequest")
public inline fun createUserProfileRequest(block: service.v1.CreateUserProfileRequestKt.Dsl.() -> kotlin.Unit): service.v1.UserProfileServiceOuterClass.CreateUserProfileRequest =
  service.v1.CreateUserProfileRequestKt.Dsl._create(service.v1.UserProfileServiceOuterClass.CreateUserProfileRequest.newBuilder()).apply { block() }._build()
public object CreateUserProfileRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: service.v1.UserProfileServiceOuterClass.CreateUserProfileRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: service.v1.UserProfileServiceOuterClass.CreateUserProfileRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): service.v1.UserProfileServiceOuterClass.CreateUserProfileRequest = _builder.build()

    /**
     * <code>.service.v1.UserProfile user_profile = 1;</code>
     */
    public var userProfile: service.v1.UserProfileServiceOuterClass.UserProfile
      @JvmName("getUserProfile")
      get() = _builder.getUserProfile()
      @JvmName("setUserProfile")
      set(value) {
        _builder.setUserProfile(value)
      }
    /**
     * <code>.service.v1.UserProfile user_profile = 1;</code>
     */
    public fun clearUserProfile() {
      _builder.clearUserProfile()
    }
    /**
     * <code>.service.v1.UserProfile user_profile = 1;</code>
     * @return Whether the userProfile field is set.
     */
    public fun hasUserProfile(): kotlin.Boolean {
      return _builder.hasUserProfile()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun service.v1.UserProfileServiceOuterClass.CreateUserProfileRequest.copy(block: service.v1.CreateUserProfileRequestKt.Dsl.() -> kotlin.Unit): service.v1.UserProfileServiceOuterClass.CreateUserProfileRequest =
  service.v1.CreateUserProfileRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val service.v1.UserProfileServiceOuterClass.CreateUserProfileRequestOrBuilder.userProfileOrNull: service.v1.UserProfileServiceOuterClass.UserProfile?
  get() = if (hasUserProfile()) getUserProfile() else null

